{
	"name": "V2 Update Cows update available set new cow",
	"properties": {
		"description": "Updates the Cow Dim table in the PostGreDWH, by inserting new cows and updating excisting ones with new information while flagging old ones as on",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "view_staging_StagingCowView",
						"type": "DatasetReference"
					},
					"name": "StagingCows"
				},
				{
					"dataset": {
						"referenceName": "table_DWH_dim_cow",
						"type": "DatasetReference"
					},
					"name": "DWHCows"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "table_DWH_dim_cow",
						"type": "DatasetReference"
					},
					"name": "SetCowNew3"
				}
			],
			"transformations": [
				{
					"name": "activeDBcows",
					"description": "filter end_dates with a null value"
				},
				{
					"name": "activatecows"
				},
				{
					"name": "CreateDateTimestamp1"
				},
				{
					"name": "CombineApiDimCow"
				},
				{
					"name": "UpdateAvailable"
				}
			],
			"script": "source(output(\n\t\tid as long,\n\t\tcondition as string,\n\t\tlife_number as string,\n\t\tresponder1 as long,\n\t\tresponder2 as long,\n\t\tresponder3 as string,\n\t\tnumber as integer,\n\t\tuuid as string,\n\t\tgroup_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> StagingCows\nsource(output(\n\t\tdim_cow_id as integer,\n\t\tlifenumber as string,\n\t\tleg_responder as long,\n\t\tneck_responder as long,\n\t\tcownumber as integer,\n\t\tnedap_id as long,\n\t\tstart_date as date,\n\t\tend_date as date,\n\t\tgroup as integer,\n\t\tlast_updated as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DWHCows\nCreateDateTimestamp1 filter(end_date == toDate('9999-01-01')) ~> activeDBcows\nactiveDBcows, StagingCows exists(lifenumber == life_number,\n\tnegate:false,\n\tbroadcast: 'auto')~> activatecows\nDWHCows derive(current_date = currentDate(),\n\t\tyesterday = addDays(currentDate(),-1),\n\t\tcurrent_timestamp = currentTimestamp(),\n\t\tend_date = toDate('9999-01-01')) ~> CreateDateTimestamp1\nactivatecows, StagingCows join(lifenumber == life_number,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CombineApiDimCow\nCombineApiDimCow filter(leg_responder != responder1 || neck_responder != responder2 || group != group_id || cownumber != number ) ~> UpdateAvailable\nUpdateAvailable sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tdim_cow_id as integer,\n\t\tlifenumber as string,\n\t\tleg_responder as long,\n\t\tneck_responder as long,\n\t\tcownumber as integer,\n\t\tnedap_id as long,\n\t\tstart_date as date,\n\t\tend_date as date,\n\t\tgroup as integer,\n\t\tlast_updated as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tlifenumber,\n\t\tleg_responder,\n\t\tneck_responder,\n\t\tcownumber,\n\t\tnedap_id,\n\t\tstart_date,\n\t\tend_date,\n\t\tgroup,\n\t\tlast_updated = current_timestamp\n\t)) ~> SetCowNew3"
		}
	}
}